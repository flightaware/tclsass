# Commands covered:  sha1
#
# This file contains a collection of tests for one or more of the Tcl
# package commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Written by Joe Mistachkin.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

package require sass

###############################################################################

if {[llength [info commands appendArgs]] == 0} then {
  proc appendArgs { args } {
    set result ""; eval append result $args
  }
}

###############################################################################

if {[llength [info commands getDictValue]] == 0} then {
  proc getDictValue { dictionary name {default ""} {wrap ""} } {
    if {[llength [info commands dict]] > 0} then {
      if {[dict exists $dictionary $name]} then {
        return [appendArgs $wrap [dict get $dictionary $name] $wrap]
      }
      return $default
    } else {
      foreach {pairName pairValue} $dictionary {
        if {$pairName eq $name} then {
          return [appendArgs $wrap $pairValue $wrap]
        }
      }
      return $default
    }
  }
}

###############################################################################

set scss {
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

.box { @include border-radius(10px); }
}

###############################################################################

test sass-1.0 {overall command usage} -body {
  list [catch {sass} errMsg] $errMsg
} -cleanup {
  unset -nocomplain errMsg
} -result {1 {wrong # args: should be "sass option ?arg ...?"}}

###############################################################################

test sass-2.0 {version sub-command usage} -body {
  list [catch {sass version foo} errMsg] $errMsg
} -cleanup {
  unset -nocomplain errMsg
} -result {1 {wrong # args: should be "sass version"}}

###############################################################################

test sass-2.1 {version sub-command output} -body {
  sass version
} -match regexp -result {^libsass \d+\.\d+\.\d+-\d+-g[0-9a-f]+$}

###############################################################################

test sass-3.0 {compile sub-command usage} -body {
  list [catch {sass compile} errMsg] $errMsg
} -cleanup {
  unset -nocomplain errMsg
} -result {1 {wrong # args: should be "sass compile ?options? source"}}

###############################################################################

test sass-3.1 {compile sub-command error} -body {
  set dictionary [sass compile ""]

  list [getDictValue $dictionary errorStatus] \
      [getDictValue $dictionary outputString] \
      [getDictValue $dictionary sourceMapString] \
      [getDictValue $dictionary errorMessage]
} -cleanup {
  unset -nocomplain dictionary
} -result {3 {} {} {Error: Data context created with empty source string
}}

###############################################################################

test sass-3.2 {compile sub-command output} -body {
  set dictionary [sass compile $scss]

  list [getDictValue $dictionary errorStatus] \
      [getDictValue $dictionary outputString] \
      [getDictValue $dictionary sourceMapString] \
      [getDictValue $dictionary errorMessage]
} -cleanup {
  unset -nocomplain dictionary
} -result {0 {.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px; }
} {} {}}

###############################################################################

unset -nocomplain scss

# cleanup
::tcltest::cleanupTests
return
